{"version":3,"sources":["Components/Feedback/Feedback.module.css","Components/FeedbackOptions/FeadbackOptions.module.css","Components/Statistics/Statistics.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Section/Section.jsx","Components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","FeadbackOptions","options","onLeaveFeedback","Object","entries","map","element","className","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","style","statistics","Section","title","children","Notification","message","App","state","handleIncrement","ivent","setState","prevState","newIvent","countTotalFeedback","values","reduce","elem","countPositiveFeedbackPercentage","Math","round","Number","feedback","FeedbackOptions","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,2ICsBhBC,EAnBO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OAAOC,OAAOC,QAAQH,GAASI,KAAI,SAACC,GAClC,OACE,wBACCC,UAAWC,SAEVC,KAAK,SACLC,QAAS,kBAAMR,EAAgBI,EAAQ,KAJzC,SAMGA,EAAQ,IAJJA,EAAQ,Q,gBCIRK,EAXI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OACf,gCACI,sBAAMT,UAAYU,IAAMC,WAAxB,wBACI,uCAAUN,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCDGG,EANC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OAChB,0BAASd,UAAaU,IAAMG,MAA5B,UACI,6BAAKA,IACJC,M,iBCDUC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGhB,UAAYU,IAAMK,aAArB,SAAoCC,KCuD3DC,E,4MAjDbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,gBAAiB,SAACC,GAChB,EAAKC,UAAS,SAAAC,GACV,IAAMC,EAAU,GAEhB,OADAA,EAASH,GAASE,EAAUF,GAAO,EAC5BG,M,EAIfC,mBAAqB,kBACrB5B,OAAO6B,OAAO,EAAKP,OAAOQ,QAAO,SAAClB,EAAOmB,GAAR,OAAkBnB,EAASmB,IAAO,I,EAGnEC,gCAAkC,WAChC,OAAqC,IAA9B,EAAKJ,qBACV,EACAK,KAAKC,MAAO,IAAMC,OAAO,EAAKb,MAAMb,MAAS,EAAKmB,uB,4CAGtD,WACE,OACI,sBAAKxB,UAAaU,IAAMsB,SAAxB,UACI,cAAC,EAAD,CAASnB,MAAQ,0BACjB,8BACI,cAACoB,EAAD,CAAiBvC,QAASwC,KAAKhB,MAC/BvB,gBAAiBuC,KAAKf,oBAGK,IAA9Be,KAAKV,qBACN,cAAC,EAAD,CAAcR,QAAQ,sBACrB,cAAC,EAAD,CACGX,KAAO6B,KAAKhB,MAAMb,KAClBC,QAAS4B,KAAKhB,MAAMZ,QACpBC,IAAK2B,KAAKhB,MAAMX,IAChBC,MAAO0B,KAAKV,qBACZf,mBAAoByB,KAAKN,2C,GAzCrBO,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.706f9257.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__3UHm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeadbackOptions_button__3FwTk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2EERf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3H5Hs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__bVJTv\"};","import {button} from './FeadbackOptions.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst FeadbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return Object.entries(options).map((element) => {\r\n      return (\r\n        <button\r\n         className={button}\r\n          key={element[0]}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(element[0])}\r\n        >\r\n          {element[0]}\r\n        </button>\r\n      );\r\n    });\r\n  };\r\n\r\n  FeadbackOptions.propTypes = {\r\n    options: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  };\r\n  \r\n  export default FeadbackOptions;\r\n","import style from './Statistics.module.css';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => (\r\n    <div>\r\n        <span className ={style.statistics}>Statistics</span>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n)\r\n\r\nexport default Statistics;","import style from './Section.module.css';\r\n\r\nconst Section = ({title, children}) =>(\r\n<section className = {style.title}>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\nexport default Section\r\n","import style from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => <p className ={style.Notification}>{message}</p>;\r\n\r\nexport default Notification;","import { Component } from 'react';\nimport style from './Components/Feedback/Feedback.module.css';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\nimport Statistic from './Components/Statistics/Statistics';\nimport Section from './Components/Section/Section';\nimport Notification from './Components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement =(ivent) =>{\n    this.setState(prevState =>{\n        const newIvent ={};\n        newIvent[ivent] = prevState[ivent]+1;\n        return newIvent; \n    });\n};\n\ncountTotalFeedback = () =>\nObject.values(this.state).reduce((total, elem) => (total += elem), 0);\n\n\ncountPositiveFeedbackPercentage = () =>{\n  return this.countTotalFeedback() === 0\n  ? 0\n  : Math.round((100 * Number(this.state.good)) / this.countTotalFeedback());\n}\n\nrender (){\n  return(\n      <div className = {style.feedback}>\n          <Section title = \"Please leave feedback\" />\n          <div>\n              <FeedbackOptions options={this.state} \n              onLeaveFeedback={this.handleIncrement}>\n              </FeedbackOptions>\n          </div>\n          {this.countTotalFeedback() === 0? (\n          <Notification message=\"No feedback given\" />):\n          (<Statistic\n              good= {this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n          />)}\n      </div>\n       \n  );\n}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}